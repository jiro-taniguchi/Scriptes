#!/bin/bash
#===============================================================================
#
#          FILE:  data.sh
# 
#         USAGE:  ./data.sh 
# 
#   DESCRIPTION:  
# 
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kazuma Yoshiyuki (), mohamed.ladghem@kinkazma.ga
#       COMPANY:  KINKAZMA.GA
#       VERSION:  1.0
#       CREATED:  27/05/2018 15:06:46 CEST
#      REVISION:  ---
#===============================================================================
## VARS 

APP_DEPENDENCIES=${APP_DEPENDENCIES}"dovecot dovecot-sqlite postfix sqlite"
APP_NAME=${APP_NAME}"SMTP"
DOMAIN="kinkazma.me"


function DATABASE_CREATION(){

	SQL_DB_PATH="/srv/db"
	SQL_DB_NAME="mailuser.db"
	SQL_DB_FILE="${SQL_DB_PATH}/${SQL_DB_NAME}"
	SQL_CREATE_DATABASE="""
 CREATE TABLE expires (
   username varchar(100) not null,
   mailbox varchar(255) not null,
   expire_stamp integer not null,
   primary key (username, mailbox)
 );

 CREATE TABLE quota (
   username varchar(100) not null,
   bytes bigint not null default 0,
   messages integer not null default 0,
   primary key (username)
 );

CREATE TABLE users (
     username VARCHAR(128) NOT NULL,
     domain VARCHAR(128) NOT NULL,
     password VARCHAR(64) NOT NULL,
     home VARCHAR(255) NOT NULL,
     uid INTEGER NOT NULL,
     gid INTEGER NOT NULL,
     active CHAR(1) DEFAULT 'Y' NOT NULL
 );
	"""
	echo "${SQL_CREATE_DATABASE}" > ${LOCAL_MOUNT_ENTRY}/create.sql
	info "Database creation"
	APP_EXEC "mkdir -p ${SQL_DB_PATH}"
	APP_EXEC "sqlite3 ${SQL_DB_FILE} < ${APP_MOUNT_ENTRY}/create.sql 2>/dev/null" true
	APP_EXEC "echo \"dbpath = ${SQL_DB_FILE}
query = SELECT domain FROM users WHERE domain='%s' AND active = '1'
	\" > /etc/postfix/sqlite-virtual-mailbox-domains.cf"
	APP_EXEC "echo \"dbpath = ${SQL_DB_FILE}
query = SELECT goto FROM users WHERE address='%s' AND active = 'Y'
	\" > /etc/postfix/sqlite-virtual-alias-maps.cf"
	APP_EXEC "echo \"dbpath = ${SQL_DB_FILE}
query = SELECT home FROM users WHERE username='%s' AND active = 'Y'
	\" > /etc/postfix/sqlite-virtual-mailbox-maps.cf"
	APP_EXEC "echo \"dbpath = ${SQL_DB_FILE}
query = SELECT username FROM users WHERE username='%s' AND active = 'Y'
	\" > /etc/postfix/sqlite-sender-login-maps.cf"
	info "Database created"

}

function 10_MAIL(){
	data="""
mail_location = maildir:/var/mail/vhosts/%d/%n/mail
maildir_stat_dirs=yes

namespace inbox {
    inbox = yes
}

mail_uid = 5000
mail_gid = 5000

first_valid_uid = 5000
last_valid_uid = 5000

mail_privileged_group = vmail

	"""
	return 0
}

function 10_MASTER(){
	data="""
	service imap-login {
  inet_listener imap {
	port = 143
  }
  inet_listener imaps {

  }
}
service pop3-login {
  inet_listener pop3 {
  }
  inet_listener pop3s {
  }
}
service lmtp {
  unix_listener /var/spool/postfix/private/dovecot-lmtp {
	mode = 0666
	 user = postfix
   group = postfix
  }
}
service imap {

}
service pop3 {
}

service auth {
  unix_listener /var/spool/postfix/private/auth {
    mode = 0666
		user = postfix
    group = postfix
  }
  unix_listener auth-userdb {
    mode = 0666
    user = vmail
    group = vmail
  }
  user = dovecot

}
service auth-worker {
  user = vmail

}
service dict {
  unix_listener dict {
  }
}
	"""
	return 0
}


function PHASE2(){
	info "${FUNCNAME[0]} Starting"
	DATABASE_CREATION
	MAILBOX_PATH="/var/mail/vhosts/"
	APP_EXEC "mkdir -p ${MAILBOX_PATH}/${DOMAIN}"
	APP_EXEC "addgroup vmail -g 5000"
	APP_EXEC "adduser vmail -u 5000" true
	APP_EXEC "chown -R vmail:vmail ${MAILBOX_PATH}"
	DOVE_PATH="/etc/dovecot"
	DOVE_PATH_CONF="${DOVE_PATH}/conf.d"
	DOVE_MAIN_CONF="${DOVE_PATH}/dovecot.conf"
	DOVE_AUTH_CONF="${DOVE_PATH_CONF}/10-auth.conf"
	DOVE_MAIL_CONF="${DOVE_PATH_CONF}/10-mail.conf"
	DOVE_SQL_CONF="${DOVE_PATH}/dovecot-sql.conf.ext"
	DOVE_LOGGING_CONF="${DOVE_PATH_CONF}/10-logging.conf"
	SMTP_MAIN_CF="/etc/postfix/main.cf"
	SET_CONF ${DOVE_PATH_CONF}/10-ssl.conf ssl no
	SET_CONF ${DOVE_MAIN_CONF} login_greeting "Welcome to kinkazma"
	SET_CONF ${DOVE_MAIN_CONF} protocols "imap lmtp"
	SET_CONF ${DOVE_MAIN_CONF} listen "0.0.0.0, ::"
	ADD_CONF ${DOVE_AUTH_CONF} "!include auth-sql.conf.ext"
	COMMENT_CONF ${DOVE_AUTH_CONF} "!include auth-passwdfile.conf.ext"
	SET_CONF ${DOVE_SQL_CONF} driver "sqlite"
	SET_CONF ${DOVE_SQL_CONF} "default_pass_scheme" "plain"
	ADD_CONF ${DOVE_SQL_CONF} "connect = ${SQL_DB_FILE}"
	ADD_CONF ${DOVE_SQL_CONF} "password_query = SELECT username, domain, password  FROM users WHERE username = '%n' AND domain = '%d'" 
	ADD_CONF ${DOVE_SQL_CONF} "user_query = SELECT home, uid, gid  FROM users WHERE username = '%n' AND domain = '%d'"
	ADD_CONF ${DOVE_MAIL_CONF} "mail_location = mbox:~/mail:INBOX=${MAILBOX_PATH}/%d/%u"
	REWRITE_FILE 10_MASTER ${DOVE_PATH_CONF}/10-master.conf
	REWRITE_FILE 10_MAIL ${DOVE_PATH_CONF}/10-mail.conf
	APP_EXEC "chown -R vmail:dovecot /etc/dovecot/"
	APP_EXEC "chmod -R o-rwx /etc/dovecot"
	APP_EXEC "rc-update add dovecot default"
	SET_CONF ${SMTP_MAIN_CF} "mydomain" "${DOMAIN}"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_auth_enable" "yes"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_type" "dovecot"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_path" "private/auth"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_security_options" "noanonymous"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_local_domain" "\$mydomain"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_authenticated_header" "yes"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sasl_auth_clients" "yes"
	SET_CONF ${SMTP_MAIN_CF} "virtual_uid_maps" "static:5000"
	SET_CONF ${SMTP_MAIN_CF} "virtual_gid_maps" "static:5000"
	SET_CONF ${SMTP_MAIN_CF} "virtual_minimum_uid"  "5000"
	SET_CONF ${SMTP_MAIN_CF} "virtual_mailbox_base" "/var/mail"
	SET_CONF ${SMTP_MAIN_CF} "virtual_mailbox_domains" "sqlite:/etc/postfix/sqlite-virtual-mailbox-domains.cf"
	SET_CONF ${SMTP_MAIN_CF} "virtual_mailbox_maps" "sqlite:/etc/postfix/sqlite-virtual-mailbox-maps.cf"
	SET_CONF ${SMTP_MAIN_CF} "virtual_alias_maps" "sqlite:/etc/postfix/sqlite-virtual-alias-maps.cf"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_sender_login_maps" "sqlite:/etc/postfix/sqlite-sender-login-maps.cf"
	SET_CONF ${SMTP_MAIN_CF} "virtual_transport" "lmtp:unix:private/dovecot-lmtp"
	SET_CONF ${SMTP_MAIN_CF} "smtpd_banner"         " ESMTP $DOMAIN (Debian/GNU)"
	SET_CONF ${SMTP_MAIN_CF} "biff"                 " no"
	SET_CONF ${SMTP_MAIN_CF} "append_dot_mydomain"  " no"
	SET_CONF ${SMTP_MAIN_CF} "readme_directory"     " no"
	SET_CONF ${SMTP_MAIN_CF} "delay_warning_time"   " 4h"
	SET_CONF ${SMTP_MAIN_CF} "mailbox_command"      " procmail -a \"\$EXTENSION\""
	SET_CONF ${SMTP_MAIN_CF} "recipient_delimiter"  " +"
	SET_CONF ${SMTP_MAIN_CF} "disable_vrfy_command" " yes"
	SET_CONF ${SMTP_MAIN_CF} "message_size_limit"   " 502400000"
	SET_CONF ${SMTP_MAIN_CF} "mailbox_size_limit"   " 1024000000"
	SET_CONF ${SMTP_MAIN_CF} "inet_interfaces" " all"
	SET_CONF ${SMTP_MAIN_CF} "inet_protocols" " ipv4"
	SET_CONF ${SMTP_MAIN_CF} "myhostname"    "hostname.${DOMAIN}"
	SET_CONF ${SMTP_MAIN_CF} "myorigin"      " hostname.${DOMAIN}"
	SET_CONF ${SMTP_MAIN_CF} "mydestination" " localhost localhost.\$mydomain"
	SET_CONF ${SMTP_MAIN_CF} "mynetworks"    " 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128"
	SET_CONF ${SMTP_MAIN_CF} "relayhost"     ""
	SET_CONF ${SMTP_MAIN_CF} "alias_maps"     " hash:/etc/aliases"
	SET_CONF ${SMTP_MAIN_CF} "alias_database" " hash:/etc/aliases"
	SET_CONF ${DOVE_LOGGING_CONF} "auth_verbose" "yes"
	SET_CONF ${DOVE_LOGGING_CONF} "auth_verbose_passwords" "yes"
	SET_CONF ${DOVE_LOGGING_CONF} "auth_debug" "yes"
	SET_CONF ${DOVE_LOGGING_CONF} "auth_debug_passwords" "yes"
	SET_CONF ${DOVE_LOGGING_CONF} "mail_debug" "yes"
	SET_CONF ${DOVE_LOGGING_CONF} "verbose_ssl" "yes"
	SET_CONF ${DOVE_AUTH_CONF} "auth_mechanisms" "plain"
	APP_EXEC "rc-update add postfix default"
}

	

function HELPER(){
	local OPTIND
	local OPTARG
	shift


	HELP="""${HELP}
	------- SMTP Options -------
	-d	- Domain to use (default : kinkazma.me)
	-h	- Show this help
	"""
	while getopts 'hd:' OPTIONS;do
		case "${OPTIONS}" in
			h) echo "${HELP}"; exit 0
				;;
			d) DOMAIN=${OPTARG}
				;;
			*) echo "Did not understand"; exit 0
				;;
		esac
	done
	if test $((${OPTIND} -1)) -eq 0;then
		echo "${HELP}"
		exit 0
	fi
}


if test ${0} = ${BASH_SOURCE};then
	echo "Must be run from template."
	exit 0
fi


